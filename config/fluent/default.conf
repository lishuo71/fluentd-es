# the http listener specifier
<source>
  @type  forward
  @label @main
  port  24224
  bind 0.0.0.0
</source>

# this pumps everything to the stdout stream
<filter **>
  @type stdout
</filter>

# this section demonstrates a simple elasticsearch setup
<label @main>
  <filter **>
    @type record_transformer
    <record>
      host_param "#{Socket.gethostname}"
      service_name ${tag_parts[1]}
    </record>
  </filter>

  <match *.**>
    @type copy
    # # > uncomment the below to stream logs to AWS elasticsearch service
    # #   ref: https://github.com/atomita/fluent-plugin-aws-elasticsearch-service
    # <store>
    #   @type "aws-elasticsearch-service"
    #   disable_retry_limit
    #   flush_interval 2s
    #   include_tag_key true
    #   logstash_format true
    #   logstash_prefix "#{ENV['LOGSTASH_PREFIX']}"
    #   logstash_dateformat %Y%m%d
    #   max_retry_wait 30s
    #   reconnect_on_error true
    #   tag_key "@log_name"
    #   type_name "node_log"
    #   <endpoint>
    #     access_key_id "#{ENV['AWS_ACCESS_KEY']}"
    #     region ap-southeast-1
    #     secret_access_key "#{ENV['AWS_SECRET_KEY']}"
    #     url "#{ENV['AWS_ES_ENDPOINT']}"
    #   </endpoint>
    # </store>
    # # /
    # # > uncomment the below to stream logs to a self-hosted elasticsearch servce
    # #   ref: https://github.com/uken/fluent-plugin-elasticsearch
     <store>
       @type elasticsearch
       <buffer>
       	flush_interval 3s
       </buffer>
       disable_retry_limit
       include_tag_key true
       logstash_format true
       # logstash_prefix "#{ENV['LOGSTASH_PREFIX']}"
       logstash_dateformat %Y%m%d
       max_retry_wait 30s
       # hosts "#{ENV['ELASTIC_HOST']}"
       # ssl_version TLSv1_2
       # user "#{ENV['ELASTIC_USER']}"
       # password "#{ENV['ELASTIC_PASSWORD']}"
       # port 443
       host localhost
  	   port 9200
       reconnect_on_error true
       tag_key @log_name
       type_name node_log
     </store>
    # # /
    # > comment the below to disable logs from streaming to the stdout
    <store>
      @type stdout
    </store>
    # /
  </match>
</label>
